{"version":3,"file":"static/js/608.e2efb2d9.chunk.js","mappings":"sMASA,EANqB,WACpB,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GAER,MAAO,CAAEE,OADeC,EAAAA,EAAAA,GAAS,CAAC,gBAAiBH,GAAnB,gBAAiCA,IAAzDI,O,kBCQT,EATkB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAC3B,OACC,iBAAKC,UAAU,0DAAf,WACC,iBAAKA,UAAU,2CAAf,UAA2DF,EAA3D,OACCC,MCKEE,EAAY,SAAC,GAAuB,IAArBN,EAAoB,EAApBA,MACdO,EACiB,OAAtBP,EAAMQ,YACHC,EADH,UAEMC,kCAFN,YAEyCV,EAAMQ,aAChD,OACC,iBAAKH,UAAU,iHAAf,WACC,0BACC,gBAAKM,IAAKJ,EAAUK,IAAI,QAAQP,UAAU,gBAE3C,iBAAKA,UAAU,sBAAf,WACC,iBAAKA,UAAU,oCAAf,WACC,gBAAKA,UAAU,uCAAf,SAAuDL,EAAMG,SAC7D,gBAAKE,UAAU,4HAAf,SACEL,EAAMa,mBAGT,iBAAKR,UAAU,oCAAf,WACC,gBAAKA,UAAU,sCAAf,4BACA,gBAAKA,UAAU,gBAAf,SAAgCL,EAAMc,eAGvC,4BACC,gBAAKT,UAAU,wDAAf,UACC,iBACCA,UAAU,4FACVU,MAAO,CACNC,MAAM,GAAD,OAA4B,IAAvBhB,EAAMiB,aAAqB,IAA2B,GAArBjB,EAAMiB,aAA5C,MAHP,mBAMQjB,EAAMiB,mBAGf,SAAC,EAAD,CAAWd,MAAM,QAAjB,UACC,iBAAKE,UAAU,mIAAf,WACC,SAAC,MAAD,CAAoBA,UAAU,iBAC7BL,EAAMkB,iBAGT,SAAC,EAAD,CAAWf,MAAM,aAAjB,SACEH,EAAMmB,OAAOC,KAAI,SAACC,GAAD,OACjB,iBACChB,UAAU,0HADX,SAIEgB,EAAEC,MAFED,EAAEvB,UAMV,SAAC,EAAD,CAAWK,MAAM,WAAjB,SAA6BH,EAAMuB,8BC5DxC,EDmE2B,WAC1B,OAAOC,EAAAA,EAAAA,IAAaC,EAAAA,EAAAA,GAAcnB,EAAWoB,M,iGEtEjCD,EAAgB,SAACE,EAAWC,GACxC,IAAMC,EAAQD,IACd,OAAO,SAACD,GAAD,UAAUE,K,kBCCZC,EAAS,WACb,OACE,gBAAKzB,UAAU,uDAAf,UACE,SAAC,KAAD,CAAYA,UAAU,8CAS5B,EAJqB,SAAC0B,GACpB,OAAO,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAACH,EAAD,IAApB,SAAiCC,M","sources":["pages/movies/view/useViewMovie.ts","pages/movies/view/components/MovieItem.tsx","pages/movies/view/ViewMovie.tsx","pages/movies/view/index.ts","utils/withContainer.tsx","utils/withSuspense.tsx"],"sourcesContent":["import { useQuery } from \"hooks\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst useViewMovie = () => {\r\n const { id } = useParams<{ id: string }>();\r\n const { data: movie } = useQuery([\"movie.details\", id], `movie/${id}`);\r\n return { movie: movie! };\r\n};\r\n\r\nexport default useViewMovie;\r\n","type IProps = {\r\n title: string;\r\n children: any;\r\n};\r\nconst MovieItem = ({ title, children }: IProps) => {\r\n return (\r\n  <div className=\"mt-5 flex flex-row flex-wrap justify-start items-center\">\r\n   <div className=\"text-indigo-600 font-normal text-lg mr-3\">{title}:</div>\r\n   {children}\r\n  </div>\r\n );\r\n};\r\n\r\nexport default MovieItem;\r\n","import React from \"react\";\r\nimport { MdOutlinePeopleAlt } from \"react-icons/md\";\r\nimport { withContainer, withSuspense } from \"utils\";\r\nimport {\r\n IDetailsMovie,\r\n IGenreMovieItem,\r\n} from \"pages/movies/view/models/IMovie\";\r\nimport useViewMovie from \"./useViewMovie\";\r\nimport movieImage from \"assets/default_movie_image.png\";\r\nimport MovieItem from \"./components/MovieItem\";\r\n\r\ntype IProps = { movie: IDetailsMovie };\r\n\r\nconst ViewMovie = ({ movie }: IProps) => {\r\n const movieUrl =\r\n  movie.poster_path === null\r\n   ? movieImage\r\n   : `${process.env.REACT_APP_IMAGE_URL}/${movie.poster_path}`;\r\n return (\r\n  <div className=\"flex flex-row flex-wrap md:flex-nowrap justify-start p-2 bg-gray-50 shadow overflow-hidden sm:rounded-lg mt-10\">\r\n   <div>\r\n    <img src={movieUrl} alt=\"movie\" className=\"bg-cover\" />\r\n   </div>\r\n   <div className=\"md:px-10 sh sm:px-5\">\r\n    <div className=\"flex justify-between items-center\">\r\n     <div className=\"text-gray-900 font-bold text-xl mb-2\">{movie.title}</div>\r\n     <div className=\"inline-flex items-center justify-center px-2 py-1 mr-2 text-xs font-bold leading-none text-white bg-gray-700 rounded-full\">\r\n      {movie.release_date}\r\n     </div>\r\n    </div>\r\n    <div className=\"flex flex-col justify-start mt-10\">\r\n     <div className=\"text-indigo-600 font-normal text-lg\">Description: </div>\r\n     <div className=\"text-gray-800\">{movie.overview}</div>\r\n    </div>\r\n\r\n    <div>\r\n     <div className=\"w-full bg-gray-200 rounded-full dark:bg-gray-700 mt-5\">\r\n      <div\r\n       className=\"bg-blue-600 text-xs font-medium text-blue-100 text-center p-0.5 leading-none rounded-full\"\r\n       style={{\r\n        width: `${movie.vote_average === 0 ? 100 : movie.vote_average * 10}%`,\r\n       }}\r\n      >\r\n       IMDB: {movie.vote_average}\r\n      </div>\r\n     </div>\r\n     <MovieItem title=\"Votes\">\r\n      <div className=\"bg-blue-100 text-blue-800 text-xs font-medium inline-flex items-center px-2.5 py-0.5 rounded dark:bg-blue-200 dark:text-blue-800\">\r\n       <MdOutlinePeopleAlt className=\"mr-1 w-3 h-3\" />\r\n       {movie.vote_count}\r\n      </div>\r\n     </MovieItem>\r\n     <MovieItem title=\"Categories\">\r\n      {movie.genres.map((g: IGenreMovieItem) => (\r\n       <span\r\n        className=\"inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-blue-100 bg-blue-700 rounded mr-2\"\r\n        key={g.id}\r\n       >\r\n        {g.name}\r\n       </span>\r\n      ))}\r\n     </MovieItem>\r\n     <MovieItem title=\"Language\">{movie.original_language}</MovieItem>\r\n    </div>\r\n   </div>\r\n  </div>\r\n );\r\n};\r\n\r\nconst ViewMovieContainer = () => {\r\n return withSuspense(withContainer(ViewMovie, useViewMovie));\r\n};\r\n\r\nexport default ViewMovieContainer;\r\n","import ViewMovie from \"./ViewMovie\";\r\n\r\nexport default ViewMovie;\r\n","export const withContainer = (View: any, hook: any) => {\r\n const props = hook();\r\n return <View {...props} />;\r\n};\r\n","import React, { Suspense } from 'react'\r\nimport { ImSpinner2 } from 'react-icons/im'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"flex justify-center items-center text-center text-lg\">\r\n      <ImSpinner2 className=\"animate-spin h-10 w-10 text-indigo-800\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst withSuspense = (Container: any) => {\r\n  return <Suspense fallback={<Loader />}>{Container}</Suspense>\r\n}\r\n\r\nexport default withSuspense\r\n"],"names":["id","useParams","movie","useQuery","data","title","children","className","ViewMovie","movieUrl","poster_path","movieImage","process","src","alt","release_date","overview","style","width","vote_average","vote_count","genres","map","g","name","original_language","withSuspense","withContainer","useViewMovie","View","hook","props","Loader","Container","Suspense","fallback"],"sourceRoot":""}