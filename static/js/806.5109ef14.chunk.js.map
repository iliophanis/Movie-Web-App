{"version":3,"file":"static/js/806.5109ef14.chunk.js","mappings":"wMAaA,EAVsB,WACrB,IAAQA,GAAWC,EAAAA,EAAAA,MAAXD,OAMR,MAAO,CAAEE,YALoBC,EAAAA,EAAAA,GAC5B,CAAC,cAAeH,GADoB,6BAEH,KAAXA,EAAgB,KAAOA,IAFtCI,KAKyBC,eADDF,EAAAA,EAAAA,GAAS,CAAC,UAAW,oBAA7CC,O,4CCAHE,EAAO,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,YAiBzB,OACC,SAACC,EAAA,KAAD,CACCC,QAAQ,SACRC,QAAQ,UACRC,SApBmB,CACpBC,QAAS,CACRC,QAAS,EACTC,WAAY,CACXC,KAAM,iBACNC,gBAAiB,IAGnBC,OAAQ,CACPJ,QAAS,EACTC,WAAY,CACXC,KAAM,mBAUPG,UAAU,4CACVC,oBAAqB,kBAAMZ,GAAY,IALxC,SAOED,KAKJD,EAAKe,KCzBY,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,SAC5BC,GAAWC,EAAAA,EAAAA,MACXC,EACiB,OAAtBL,EAAMM,YACHC,EADH,UAEMC,kCAFN,YAEyCR,EAAMM,aAUhD,OACC,UAACnB,EAAA,KAAD,CACCsB,QAAS,kBAAMN,EAAS,UAAD,OAAWH,EAAMU,MACxCC,WAAY,CAAEC,MAAO,KACrBtB,SAZW,CACZC,QAAS,CAAEC,QAAS,EAAGqB,EAAG,GAC1BjB,OAAQ,CAAEJ,QAAS,EAAGqB,GAAI,MAWzBhB,UAAU,oKAJX,WAMC,SAACV,EAAA,MAAD,CACCG,SAZmB,CACrBC,QAAS,CAAEC,QAAS,EAAGC,WAAY,CAAEqB,SAAU,IAC/ClB,OAAQ,CAAEJ,QAAS,IAWjBuB,IAAKV,EACLW,IAAI,cACJC,MAAM,KACNC,OAAO,KACPrB,UAAU,uCAGX,iBAAKA,UAAU,6BAAf,WACC,eAAIA,UAAU,8CAAd,SACEG,EAAMmB,QAEPjB,IACA,gBAAKL,UAAU,gCAAf,SAAgDG,EAAMoB,gBAEvD,iBAAKvB,UAAU,oDAAf,WACC,iBAAKA,UAAU,8DAAf,WACC,SAAC,MAAD,CAAQA,UAAU,uBACjBG,EAAMqB,gBAGPrB,EAAMsB,UAAUC,KAAI,SAACb,GACrB,IAAMc,EAAYvB,EAAOwB,MAAK,SAACC,GAAD,OAAeA,EAAEhB,KAAOA,KAAKiB,KAC3D,OACC,iBACC9B,UAAU,8HADX,SAIE2B,GAFId,OAMR,gBAAKb,UAAU,oCAAf,UACC,gBAAKA,UAAU,iBAAf,SAAiCG,EAAM4B,uBD7B7C,QE7BMC,EAAa,SAAC,GAA2C,IAAzCjD,EAAwC,EAAxCA,WAAYG,EAA4B,EAA5BA,cAC3B+C,EAASlD,EAAWmD,QAC1B,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAO9B,EAAP,KAAiBhB,EAAjB,KACA,OACC,SAAC,EAAD,CAAMA,YAAaA,EAAnB,SACE4C,EAAOP,KAAI,SAACvB,GAAD,OACX,SAAC,OAAD,CAECA,MAAOA,EACPC,OAAQlB,EAAckB,OACtBC,SAAUA,GAHLF,EAAMU,UCjBhB,ED0B4B,WAC3B,OAAOuB,EAAAA,EAAAA,IAAaC,EAAAA,EAAAA,GAAcL,EAAYM,M,iGE7BlCD,EAAgB,SAACE,EAAWC,GACxC,IAAMC,EAAQD,IACd,OAAO,SAACD,GAAD,UAAUE,K,kBCCZC,EAAS,WACb,OACE,gBAAK1C,UAAU,uDAAf,UACE,SAAC,KAAD,CAAYA,UAAU,8CAS5B,EAJqB,SAAC2C,GACpB,OAAO,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAACH,EAAD,IAApB,SAAiCC,M","sources":["pages/movies/list/useMoviesList.ts","pages/movies/list/components/List.tsx","pages/movies/list/components/ListItem.tsx","pages/movies/list/MoviesList.tsx","pages/movies/list/index.ts","utils/withContainer.tsx","utils/withSuspense.tsx"],"sourcesContent":["import { useQuery } from \"hooks\";\r\nimport { useSearch } from \"contexts/SearchProvider\";\r\n\r\nconst useMoviesList = () => {\r\n const { search } = useSearch();\r\n const { data: moviesList } = useQuery(\r\n  [\"movies.list\", search],\r\n  `search/movie?query=${search === \"\" ? \"''\" : search}`\r\n );\r\n const { data: genresResults } = useQuery([\"genres\"], \"genre/movie/list\");\r\n return { moviesList: moviesList, genresResults: genresResults };\r\n};\r\n\r\nexport default useMoviesList;\r\n","import { motion } from \"framer-motion\";\r\nimport React from \"react\";\r\nimport ListItem from \"./ListItem\";\r\n\r\ntype IProps = {\r\n children: any;\r\n setShowDate: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\nconst List = ({ children, setShowDate }: IProps) => {\r\n const listVariants = {\r\n  visible: {\r\n   opacity: 1,\r\n   transition: {\r\n    when: \"beforeChildren\",\r\n    staggerChildren: 1,\r\n   },\r\n  },\r\n  hidden: {\r\n   opacity: 0,\r\n   transition: {\r\n    when: \"afterChildren\",\r\n   },\r\n  },\r\n };\r\n\r\n return (\r\n  <motion.ul\r\n   initial=\"hidden\"\r\n   animate=\"visible\"\r\n   variants={listVariants}\r\n   className=\"flex flex-col justify-center items-center\"\r\n   onAnimationComplete={() => setShowDate(true)}\r\n  >\r\n   {children}\r\n  </motion.ul>\r\n );\r\n};\r\n\r\nList.Item = ListItem;\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { BiStar } from \"react-icons/bi\";\r\n\r\nimport { IMovie } from \"pages/movies/list/models/IMovie\";\r\nimport { IGenre } from \"pages/movies/list/models/IGenre\";\r\nimport movieImage from \"assets/default_movie_image.png\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ntype IProps = {\r\n movie: IMovie;\r\n genres: IGenre[];\r\n showDate: boolean;\r\n};\r\nconst ListItem = ({ movie, genres, showDate }: IProps) => {\r\n const navigate = useNavigate();\r\n const movieUrl =\r\n  movie.poster_path === null\r\n   ? movieImage\r\n   : `${process.env.REACT_APP_IMAGE_URL}/${movie.poster_path}`;\r\n\r\n const item = {\r\n  visible: { opacity: 1, x: 0 },\r\n  hidden: { opacity: 0, x: -100 },\r\n };\r\n const imageVariants = {\r\n  visible: { opacity: 1, transition: { duration: 5 } },\r\n  hidden: { opacity: 0 },\r\n };\r\n return (\r\n  <motion.li\r\n   onClick={() => navigate(`/movie/${movie.id}`)}\r\n   whileHover={{ scale: 1.1 }}\r\n   variants={item}\r\n   className=\"cursor-pointer flex items-start mt-1 mb-1 space-x-6 p-6 w-full lg:w-6/12 rounded-lg border border-gray-100 shadow-xl hover:shadow-indigo-500/50 hover:bg-gray-100\"\r\n  >\r\n   <motion.img\r\n    variants={imageVariants}\r\n    src={movieUrl}\r\n    alt=\"movie photo\"\r\n    width=\"60\"\r\n    height=\"90\"\r\n    className=\"flex-none rounded-md bg-slate-100\"\r\n   />\r\n\r\n   <div className=\"min-w-0 relative flex-auto\">\r\n    <h2 className=\"font-semibold text-slate-900 truncate pr-20\">\r\n     {movie.title}\r\n    </h2>\r\n    {showDate && (\r\n     <div className=\"w-full items-center space-x-1\">{movie.release_date}</div>\r\n    )}\r\n    <div className=\"mt-2 flex flex-wrap text-sm leading-6 font-medium\">\r\n     <div className=\"px-1.5 ring-1 ring-slate-200 rounded mr-2 flex items-center\">\r\n      <BiStar className=\"text-blue-500 mr-1\" />\r\n      {movie.vote_average}\r\n     </div>\r\n\r\n     {movie.genre_ids.map((id: number) => {\r\n      const genreName = genres.find((g: IGenre) => g.id === id)!.name;\r\n      return (\r\n       <span\r\n        className=\"inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-indigo-100 bg-indigo-700 rounded mr-2\"\r\n        key={id}\r\n       >\r\n        {genreName}\r\n       </span>\r\n      );\r\n     })}\r\n     <div className=\"flex-none w-full mt-2 font-normal\">\r\n      <div className=\"text-slate-400\">{movie.overview}</div>\r\n     </div>\r\n    </div>\r\n   </div>\r\n  </motion.li>\r\n );\r\n};\r\n\r\nexport default ListItem;\r\n","import { useState } from \"react\";\r\n\r\nimport { withSuspense, withContainer } from \"utils\";\r\nimport useMoviesList from \"./useMoviesList\";\r\nimport { IMovieList, IMovie } from \"pages/movies/list/models/IMovie\";\r\nimport { IGenres } from \"pages/movies/list/models/IGenre\";\r\nimport { List } from \"pages/movies/list/components\";\r\n\r\ntype IProps = {\r\n moviesList: IMovieList;\r\n genresResults: IGenres;\r\n};\r\nconst MoviesList = ({ moviesList, genresResults }: IProps) => {\r\n const movies = moviesList.results;\r\n const [showDate, setShowDate] = useState(false);\r\n return (\r\n  <List setShowDate={setShowDate}>\r\n   {movies.map((movie: IMovie) => (\r\n    <List.Item\r\n     key={movie.id}\r\n     movie={movie}\r\n     genres={genresResults.genres}\r\n     showDate={showDate}\r\n    />\r\n   ))}\r\n  </List>\r\n );\r\n};\r\nconst MoviesListContainer = () => {\r\n return withSuspense(withContainer(MoviesList, useMoviesList));\r\n};\r\n\r\nexport default MoviesListContainer;\r\n","import MoviesList from \"./MoviesList\";\r\n\r\nexport default MoviesList;\r\n","export const withContainer = (View: any, hook: any) => {\r\n const props = hook();\r\n return <View {...props} />;\r\n};\r\n","import React, { Suspense } from 'react'\r\nimport { ImSpinner2 } from 'react-icons/im'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"flex justify-center items-center text-center text-lg\">\r\n      <ImSpinner2 className=\"animate-spin h-10 w-10 text-indigo-800\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst withSuspense = (Container: any) => {\r\n  return <Suspense fallback={<Loader />}>{Container}</Suspense>\r\n}\r\n\r\nexport default withSuspense\r\n"],"names":["search","useSearch","moviesList","useQuery","data","genresResults","List","children","setShowDate","motion","initial","animate","variants","visible","opacity","transition","when","staggerChildren","hidden","className","onAnimationComplete","Item","movie","genres","showDate","navigate","useNavigate","movieUrl","poster_path","movieImage","process","onClick","id","whileHover","scale","x","duration","src","alt","width","height","title","release_date","vote_average","genre_ids","map","genreName","find","g","name","overview","MoviesList","movies","results","useState","withSuspense","withContainer","useMoviesList","View","hook","props","Loader","Container","Suspense","fallback"],"sourceRoot":""}